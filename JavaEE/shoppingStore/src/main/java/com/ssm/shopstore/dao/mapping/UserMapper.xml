<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.shopstore.dao.UserMapping">
	<resultMap id="BaseResultMap" type="User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="name" jdbcType="VARCHAR" />
		<result column="user_phone" property="phone" jdbcType="FLOAT" />
		<result column="user_passwd" property="passwd" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 添加用户 -->
	<insert id="insert" parameterType ="com.ssm.shopstore.domain.User">
	insert into user( user_name,user_phone,user_passwd ) values (#{name:VARCHAR} , #{phone:FLOAT} , #{passwd:VARCHAR} )
	</insert>
	
	<!-- 通过用户名和密码获取用户 -->
	<select id="getByNaAndPwd" resultMap="BaseResultMap">
	select * from user where user_phone = #{phone,jdbcType=VARCHAR} and user_passwd = #{passwd,jdbcType=VARCHAR}
	</select>
	
	
<!-- 	<sql id="Base_Column_List">
		 id, shop_no, shop_name, shop_type, shop_password, note 
	</sql>

	根据门店编码和密码获取门店信息
	<select id="getByNoAndPwd" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from smi_shop_info
		where shop_no = #{shopNo,jdbcType=VARCHAR} and shop_password = #{password,jdbcType=VARCHAR}
	</select>

	查询所有
	<select id="getAll" resultMap="BaseResultMap">
	select * from smi_shop_info
	</select>
	
	根据id查询
	<select id="getById" resultMap="BaseResultMap">
	select * from smi_shop_info where id = #{id,jdbcType=INTEGER}
	</select>
	
	根据id删除
	<delete id="delById" parameterType="Integer">
	delete from smi_shop_info where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<update id="update" parameterType="com.xxx.model.SmiShopInfo">
	update smi_shop_info set shop_No = #{shopNo:VARCHAR} , shop_Name = #{shopName:VARCHAR} , shop_Type = #{shopType:VARCHAR} , shop_Password = #{shopPassword:VARCHAR} , note= #{note:VARCHAR} where id = #{id:INTEGER}
	</update>
	
	<insert id="insert" parameterType ="com.xxx.model.SmiShopInfo">
	insert into smi_shop_info( shop_No,shop_Name,shop_Type,shop_Password,note ) value (#{shopNo:VARCHAR} , #{shopName:VARCHAR} , #{shopType:VARCHAR} , #{shopPassword:VARCHAR} , #{note:VARCHAR} )
	</insert> -->
</mapper>
